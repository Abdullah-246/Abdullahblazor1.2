
<div class="bg-light border p-2 col-5" @onclick="(args)=>LastSelectedProduct(args,Product.Name)">
    <h4 class="text-secondary">Product - @Product.Id</h4>
    <br/><input type="checkbox"@onchange="FavoriteUpdated" /> Add to Favorite<br />
    Name = @Product.Name <br />
    <p>RF from Parent - @FirstFragment @SecondFragment</p>
    Show Properties:
    <input type="checkbox" @bind-value="Product.IsActive" checked="@(Product.IsActive?"checked":null)" />
    @if (Product.IsActive)
    {
        @foreach (var prodProp in Product.ProductProperties)
        {
            <p>@prodProp.Key - @prodProp.Value</p>
        }
    }
    <br />
    <_EditDeleteButtonrazor IsActive="@Product.IsActive">
    </_EditDeleteButtonrazor>
</div>
@code {
    [Parameter]
    public Demo_Product Product { get; set; }

    [Parameter]
    public EventCallback<bool> OnFavoriteUpdated { get; set; }

    [Parameter]
    public EventCallback<string> OnLastSelectedProductChange{ get; set; }

    [Parameter]
    public RenderFragment FirstFragment{ get; set; }

    [Parameter]
    public RenderFragment SecondFragment { get; set; }

    private async Task FavoriteUpdated(Microsoft.AspNetCore.Components.ChangeEventArgs e)
    {
        await OnFavoriteUpdated.InvokeAsync((bool)e.Value);
    }

    private async Task LastSelectedProduct(MouseEventArgs e,string name)
    {
        await OnLastSelectedProductChange.InvokeAsync(name);
    }
}
